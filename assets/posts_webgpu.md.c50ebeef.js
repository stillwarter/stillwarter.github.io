import{_ as e,o as t,c,C as n,N as l,x as s,a as r,D as a}from"./chunks/framework.d770699b.js";const E=JSON.parse('{"title":"webgpuDemo","description":"","frontmatter":{"title":"webgpuDemo","outline":"deep","date":"2023-06-04T00:00:00.000Z","tags":["WebGPU","Stu","荒野","半成品"]},"headers":[],"relativePath":"posts/webgpu.md"}'),F={name:"posts/webgpu.md"},y=l('<h1 id="webgpu-初探" tabindex="-1">webgpu 初探 <a class="header-anchor" href="#webgpu-初探" aria-label="Permalink to &quot;webgpu 初探&quot;">​</a></h1><p>展示一个原生的webgpu渲染demo，和一个使用orillusion的渲染demo，然后做了一点简单的介绍，并未涉及系统的图形学知识，严格来说这篇介绍只是一个半成品，后续有机会进行补充和完善。</p><p>我的内容里可能有许多描述错误或不严谨的地方，请见谅，若有错误可以在<a href="https://fishpi.cn/member/stillwarter" target="_blank" rel="noreferrer">鱼排</a>指出！</p><p>源码会在后续完善后进行更新。</p><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>2023年4月下旬，碰巧看到了webgpu可以在google浏览器金丝雀版上使用。刚好正准备看看webgl3d渲染相关的文档，反正都不会，就直接看webgpu了。主要是想了解一些浏览器是如何进行3d渲染的，当然有关3d渲染还是十分复杂的，若是没有良好的图形学知识进行支撑，那就当图一乐了。</p><p>这仅仅是一个开始，希望在后面能有所收获。</p><h2 id="webgpu示例" tabindex="-1">webgpu示例 <a class="header-anchor" href="#webgpu示例" aria-label="Permalink to &quot;webgpu示例&quot;">​</a></h2><p>这是使用原生的webgpu的demo：</p>',9),D=s("h2",{id:"orillusion示例",tabindex:"-1"},[r("orillusion示例 "),s("a",{class:"header-anchor",href:"#orillusion示例","aria-label":'Permalink to "orillusion示例"'},"​")],-1),i=s("p",null,"这是使用orillusion框架的demo：",-1),C=l(`<h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h2><h3 id="_0-和webgpu有关的小历史" tabindex="-1">0.和webgpu有关的小历史 <a class="header-anchor" href="#_0-和webgpu有关的小历史" aria-label="Permalink to &quot;0.和webgpu有关的小历史&quot;">​</a></h3><p>一些前置信息，不感兴趣可以直接看下面。</p><h5 id="_0-1-webgl的发展史" tabindex="-1">0.1 webgl的发展史 <a class="header-anchor" href="#_0-1-webgl的发展史" aria-label="Permalink to &quot;0.1 webgl的发展史&quot;">​</a></h5><p>在叙述webgpu之前先看看现在浏览器3d渲染的老大哥webgl。webgl1.0标准发布在2011年，它其实是opengl es2.0在web上的一个实现，而opengl es2.0其实只是opengl2.0在移动端的一个具体实现，而opengl2.0标准是在2004年发布的。</p><p>所以webgl1.0实际上使用的是04年的一套东西，而webgl2.0同样对标的是2009年发布的opengl3.2，所以可以说，现在浏览器上的有关3d渲染的方式都采用的是近10年前的标准。</p><p>所以在某些方面，webgl无法满足现代gpu架构以及高性能的计算渲染需求。</p><p>在2015前后，苹果，微软和khronos分别推出了基于全新gpu架构的metal，d3d12和vulkan，这三个可以称为是现代图形学api。</p><p>截至2022年3月，google依靠自家的开源项目dawn早早利用C++完成了webgpu适配。火狐成立gfx-rs项目，在nightly build完成了webgpu支持，苹果safari在etchnology preview这个版本完成支持。而edge以及一系列国产浏览器大概率是准备白嫖google的dawn...</p><p>在我写完这篇文章的时候，也就是23年6月4日，在此之前，google浏览器以及完成了webgpu的上线，后续edge也完成了webgpu的上线。但在移动端，safari浏览器并没有webgpu的支持，可能移动端会晚一些上线罢。</p><h5 id="_0-2-gpu渲染流程" tabindex="-1">0.2 gpu渲染流程 <a class="header-anchor" href="#_0-2-gpu渲染流程" aria-label="Permalink to &quot;0.2 gpu渲染流程&quot;">​</a></h5><p>在叙述webgpu之前，看看gpu本身是如何渲染的罢。</p><p>图形绘制管线分为三个阶段：应用程序阶段，几何阶段，光栅阶段。</p><h6 id="_0-2-1-管线" tabindex="-1">0.2.1 管线 <a class="header-anchor" href="#_0-2-1-管线" aria-label="Permalink to &quot;0.2.1 管线&quot;">​</a></h6><p>什么是管线呢？</p><p>pu中的管线指的是执行管道流水线，简称为管线。</p><p>管线这个说法并不是只存在于gpu的，管线对于cpu的关系就类似于汽车组装线与汽车之间的关心。cpu管线并不是物理意义上提供数据输入输出的管路或通道，它是为了执行指令而归纳出的下一步需要做的事情。</p><p>gpu架构和cpu有极大不同，因为两者适用于不同的场合。想象一下，gpu面对3d游戏中成千上万的三角面，若仅仅是逐一单个处理计算，损失的效率是及其惊人的。</p><p>回到正题，类比汽车工业的发展，在1913年前福特开发出汽车流水线之前，汽车组装只能让一位位工人逐工序完成，年产不过12台，效率极低。在引入流水线概念之后，每位工人只需要不停的做一道工序，所有工序并行进行，效率可提高八倍。</p><p>gpu对图像处理的高效率体现了同样的思路，gpu采用数量众的计算单元和超长额流水线，但每一个部分只有非常简单的控制逻辑（如同摩登时代中一个流水线工人只负责拧一个螺丝）。尽管计算能力不如cpu，但耐不住人多力量大。好比一千道十以内加减法同时给一百个小学生和一个大学生来做，尽管小学生能力小，但这么多小学生同时做耗时肯定是比一个大学生来的快。</p><h6 id="_0-2-2-管线与渲染" tabindex="-1">0.2.2 管线与渲染 <a class="header-anchor" href="#_0-2-2-管线与渲染" aria-label="Permalink to &quot;0.2.2 管线与渲染&quot;">​</a></h6><p>gpu渲染一个图形所的过程就像工厂的流水线一样，所以我的理解是gpu渲染流程等同于一些文章里的管线渲染流程（若有错误请指出，目前我并没有系统的学习过计算机图形学的知识）。</p><p>所以在正式进行图形绘制之前，应该有一个初始化的阶段，管线的初始化，cpu会告诉gpu，哥们，这个事儿你帮帮忙；cpu如同进货卡车一样不断将处理的数据丢给gpu，gpu工厂调用计算单元对数据进行简单的计算处理，而在管线的最后会组装出产品--图形。</p><h6 id="_0-2-3-应用程序阶段" tabindex="-1">0.2.3 应用程序阶段 <a class="header-anchor" href="#_0-2-3-应用程序阶段" aria-label="Permalink to &quot;0.2.3 应用程序阶段&quot;">​</a></h6><p>这是由cpu主要的负责阶段，这个阶段开发者开源控制。cpu将决定传递给gpu什么样的数据（比如渲染目标场景中的灯光，场景的模型，摄像机的位置）有时候还会对这些数据进行处理，并告诉gpu这些数据的渲染状态（纹理材质等）。</p><h6 id="_0-2-4-几何阶段" tabindex="-1">0.2.4 几何阶段 <a class="header-anchor" href="#_0-2-4-几何阶段" aria-label="Permalink to &quot;0.2.4 几何阶段&quot;">​</a></h6><p>这个阶段主要由gpu进行主导，主要进行顶点变换和光照计算，其实它主要的工作就是获取三维模型的顶点坐标，按照某种方式将其投影到2d屏幕上。</p><p>顶点变化分为以下几个阶段：</p><p>模型坐标---世界坐标---视点坐标---投影（裁剪）坐标</p><p>需要注意的是：</p><ul><li><p>从object space coordinate到world space coordinate的变换过程由一个四阶矩阵控制，通常称为world matrix。</p></li><li><p>光照计算通常在world coordinate space中进行，这也符合逻辑。当然也可以在eye coordinate space中得到相同的光照效果。</p></li><li><p>从eye space 到 project and clip space需要将视锥之外和视锥之内的顶点进行裁剪。</p></li><li><p>将视锥中的顶点变换到2d屏幕空间称为投影，裁剪就在这个空间中进行。</p></li></ul><p>将顶点处理好后，gpu会进行图元装配（也就是原始的坐标连接关系），还原出网格结构，再将这这些顶点连接为一个个三角形，这样我们就会得到一堆透明的面片。</p><h6 id="_0-2-5-光栅化阶段" tabindex="-1">0.2.5 光栅化阶段 <a class="header-anchor" href="#_0-2-5-光栅化阶段" aria-label="Permalink to &quot;0.2.5 光栅化阶段&quot;">​</a></h6><p>这一阶段将决定哪些像素被几何图元覆盖的过程。所谓像素就是显示器的一个个像素点，几何图元就是我们之前生成的面片。</p><p>因为3d渲染是有一条z轴的，配合摄像机来达到3d渲染的效果，若没有摄像机，在平视角度下，我们看到的还是一张2d图形。</p><h5 id="_0-3-浏览器渲染" tabindex="-1">0.3 浏览器渲染 <a class="header-anchor" href="#_0-3-浏览器渲染" aria-label="Permalink to &quot;0.3 浏览器渲染&quot;">​</a></h5><p>我们知道了gpu的一个渲染流程，那么浏览器又是如何将获取的html字节流转换为2d或3d的图形图像呢？</p><p>todo... 还没想好怎么叙述。</p><h3 id="_1-简单使用webgpu" tabindex="-1">1.简单使用webgpu <a class="header-anchor" href="#_1-简单使用webgpu" aria-label="Permalink to &quot;1.简单使用webgpu&quot;">​</a></h3><p>在支持webgpu的浏览器上，直接进行code就行，不需要进行第三方库的准备。</p><p>有关代码细节问题请查看webgpu文档。</p><h5 id="_1-1-webgpu初始化" tabindex="-1">1.1 webgpu初始化 <a class="header-anchor" href="#_1-1-webgpu初始化" aria-label="Permalink to &quot;1.1 webgpu初始化&quot;">​</a></h5><p>由于许多浏览器是不支持webgpu的，所以在初始化的时候我们需要进行一些判断处理</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 1.初始化adapter和device */</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initwebgpu</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">canvas</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLCanvasElement</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 判断浏览器是否支持gpu</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gpu</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">你的浏览器不支持webgpu捏，请使用谷歌或edga浏览器的最新版本</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 生成adapter抽象代理</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">adapter</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gpu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestAdapter</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    powerPreference</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">high-performance</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">adapter</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">没有找到webgpu adapter代理捏</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 通过adapter请求逻辑实例device</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">adapter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestDevice</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 为canvas获取webgpu的上线问context</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getContext</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">webgpu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">GPUCanvasContext</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 获取支持的颜色格式</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">format</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gpu</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">getPreferredCanvasFormat</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">navigator</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">gpu</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPreferredCanvasFormat</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPreferredFormat</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">adapter</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 高刷支持（不懂）</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">devicePixelRatio</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">devicePixelRatio</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// canvas设置</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientWidth</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">devicePixelRatio</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientHeight</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">devicePixelRatio</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> width</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> height</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvas</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 对context上下文进行配置</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">configure</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">format</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    alphaMode</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">opaque</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">format</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-2-创建管线" tabindex="-1">1.2 创建管线 <a class="header-anchor" href="#_1-2-创建管线" aria-label="Permalink to &quot;1.2 创建管线&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 2.创建简单的渲染管线 */</span></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initpipeline</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">device</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GPUDevice</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">format</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GPUTextureFormat</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GPURenderPipeline</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// descriptor是创建管线所必要的参数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">descriptor</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">GPURenderPipelineDescriptor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 新版本增加成员，必要（不然会报错，先不管）</span></span>
<span class="line"><span style="color:#F07178;">    layout</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">auto</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 描述管线的顶点着色器，或者说是顶点shader？</span></span>
<span class="line"><span style="color:#F07178;">    vertex</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      module</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createShaderModule</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        code</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">triangleVert</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// shader的入口？</span></span>
<span class="line"><span style="color:#F07178;">      entryPoint</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 描述与管线相关的原始属性（渲染是如何进行原始组装和光栅化的）</span></span>
<span class="line"><span style="color:#F07178;">    primitive</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// topology: &quot;triangle-list&quot;,</span></span>
<span class="line"><span style="color:#F07178;">      topology</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">line-strip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      topology</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">triangle-strip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 描述管线的着色器入口及其输出颜色</span></span>
<span class="line"><span style="color:#F07178;">    fragment</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      module</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createShaderModule</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        code</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">redFrag</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      entryPoint</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      targets</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">format</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createRenderPipelineAsync</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">descriptor</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-3-录制渲染通道" tabindex="-1">1.3 录制渲染通道 <a class="header-anchor" href="#_1-3-录制渲染通道" aria-label="Permalink to &quot;1.3 录制渲染通道&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">draw</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">device</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GPUDevice</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GPUCanvasContext</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#A6ACCD;font-style:italic;">pipeline</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GPURenderPipeline</span></span>
<span class="line"><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 获取命令encoder</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">commandEncoder</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createCommandEncoder</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 获取可以被gpu操作的view buffer</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">view</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getCurrentTexture</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createView</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 设置渲染通道参数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">renderPassDescriptor</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">GPURenderPassDescriptor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 设置颜色附件</span></span>
<span class="line"><span style="color:#F07178;">    colorAttachments</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        clearValue</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> r</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">        loadOp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">clear</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        storeOp</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">store</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 设置renderpass</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">passEncoder</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">commandEncoder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">beginRenderPass</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">renderPassDescriptor</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 使用命令对pipeline进行加载</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">passEncoder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPipeline</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">pipeline</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">passEncoder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">draw</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">passEncoder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">end</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 提交命令</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">submit</span><span style="color:#F07178;">([</span><span style="color:#A6ACCD;">commandEncoder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">finish</span><span style="color:#F07178;">()])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-4-绑定到canvas" tabindex="-1">1.4 绑定到canvas <a class="header-anchor" href="#_1-4-绑定到canvas" aria-label="Permalink to &quot;1.4 绑定到canvas&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">canvas</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cv</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">canvas</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">没有画布元素</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">format</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">initwebgpu</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">canvas</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pipeline</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">initpipeline</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">format</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">draw</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">device</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pipeline</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_1-5-顶点插槽和资源绑定" tabindex="-1">1.5 顶点插槽和资源绑定 <a class="header-anchor" href="#_1-5-顶点插槽和资源绑定" aria-label="Permalink to &quot;1.5 顶点插槽和资源绑定&quot;">​</a></h5><p>还记得之前提到过的gpu渲染流程吗，在webgpu的实现里的第二步，我们创建了管线，第三步里我们为管线设置了着色器和图形入口等，最后将渲染操纵录入管线中。</p><p>这个部分比较复杂，后续又机会再叙述，使用顶点插槽和资源绑定可以使用js配合shader来动态更改数据。</p><h3 id="_2-简单使用orillusion框架" tabindex="-1">2.简单使用orillusion框架 <a class="header-anchor" href="#_2-简单使用orillusion框架" aria-label="Permalink to &quot;2.简单使用orillusion框架&quot;">​</a></h3><h5 id="_2-0-导入orilusion第三方包" tabindex="-1">2.0 导入orilusion第三方包 <a class="header-anchor" href="#_2-0-导入orilusion第三方包" aria-label="Permalink to &quot;2.0 导入orilusion第三方包&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> pkg </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@orillusion/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Engine3D</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Scene3D</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    AtmosphericComponent</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Object3D</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Camera3D</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    HoverCameraController</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    DirectLight</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    MeshRenderer</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    BoxGeometry</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    LitMaterial</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    View3D</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    ComponentBase</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Color</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    Time</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    PostProcessingComponent</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    TAAPost</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pkg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-1-初始化3d引擎" tabindex="-1">2.1 初始化3d引擎 <a class="header-anchor" href="#_2-1-初始化3d引擎" aria-label="Permalink to &quot;2.1 初始化3d引擎&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">canvasConfig</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      canvas</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// backgroundImage:\`./img/gril.png\`</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// devicePixelRatio:2,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-2-设置场景以及往场景增加子组件" tabindex="-1">2.2 设置场景以及往场景增加子组件 <a class="header-anchor" href="#_2-2-设置场景以及往场景增加子组件" aria-label="Permalink to &quot;2.2 设置场景以及往场景增加子组件&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> scene3D</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Scene3D</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Scene3D</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// add an Atmospheric sky enviroment</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> sky </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scene3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(AtmosphericComponent)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// sky.sunY = 0.66</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// sky.fov=1</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// sky.name=&#39;stusky&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// console.log(sky);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// create camera</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cameraObj</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object3D</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object3D</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> camera </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cameraObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(Camera3D)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// adjust camera view</span></span>
<span class="line"><span style="color:#A6ACCD;">  camera</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">perspective</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">aspect</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5000.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// set camera controller</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controller </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cameraObj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(HoverCameraController)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setCamera</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// add camera node</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  scene3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addChild</span><span style="color:#A6ACCD;">(cameraObj)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  camera</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">viewPort</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">566</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// create light</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> light</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object3D</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object3D</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// add direct light component</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> component</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DirectLight</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> light</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(DirectLight)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// adjust lighting</span></span>
<span class="line"><span style="color:#A6ACCD;">  light</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rotationX </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">45</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  light</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rotationY </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  component</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lightColor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Color</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  component</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">intensity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//  给灯光增加变换脚本</span></span>
<span class="line"><span style="color:#A6ACCD;">  component</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">object3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(LightAnimation)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// add light object</span></span>
<span class="line"><span style="color:#A6ACCD;">  scene3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addChild</span><span style="color:#A6ACCD;">(light)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// create new object</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object3D</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object3D</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// add MeshRenderer</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> mr</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MeshRenderer</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(MeshRenderer)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// set geometry</span></span>
<span class="line"><span style="color:#A6ACCD;">  mr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">geometry </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BoxGeometry</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// set material</span></span>
<span class="line"><span style="color:#A6ACCD;">  mr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">material </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LitMaterial</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// set rotation</span></span>
<span class="line"><span style="color:#A6ACCD;">  obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rotationY </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">115</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 给实体对象增加坐标移动脚本</span></span>
<span class="line"><span style="color:#A6ACCD;">  obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(PathAnimation)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// add object</span></span>
<span class="line"><span style="color:#A6ACCD;">  scene3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addChild</span><span style="color:#A6ACCD;">(obj)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-3-进行渲染" tabindex="-1">2.3 进行渲染 <a class="header-anchor" href="#_2-3-进行渲染" aria-label="Permalink to &quot;2.3 进行渲染&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> view </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">View3D</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// scene3D.scaleX=1</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// scene3D.scaleY=10</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// scene3D.scaleZ=10</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// scene3D.rotationZ=11</span></span>
<span class="line"><span style="color:#A6ACCD;">  view</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scene </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scene3D</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  view</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">camera </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> camera</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// start render</span></span>
<span class="line"><span style="color:#A6ACCD;">  Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startRenderView</span><span style="color:#A6ACCD;">(view)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-4-设置灯光-坐标变换类" tabindex="-1">2.4 设置灯光，坐标变换类 <a class="header-anchor" href="#_2-4-设置灯光-坐标变换类" aria-label="Permalink to &quot;2.4 设置灯光，坐标变换类&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">LightAnimation</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ComponentBase</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">light</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DirectLight</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">start</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">light</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">object3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getComponent</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">DirectLight</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">color</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">light</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lightColor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">onUpdate</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// this.color.r = Math.pow(Math.sin(Time.time + 1), 10);</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// this.color.r=20</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">r</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0001</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0003</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0002</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// this.color.g = Math.pow(Math.sin(Time.time + 0.003), 10);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">light</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lightColor</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PathAnimation</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ComponentBase</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">onUpdate</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">object3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sin</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">time</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.001</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">object3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cos</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">time</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.001</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-5-设置taapost抗锯齿处理" tabindex="-1">2.5 设置TAAPost抗锯齿处理 <a class="header-anchor" href="#_2-5-设置taapost抗锯齿处理" aria-label="Permalink to &quot;2.5 设置TAAPost抗锯齿处理&quot;">​</a></h5><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ngine3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">setting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">postProcessing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">taa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">jitterSeedCount </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">setting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">postProcessing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">taa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">blendFactor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">setting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">postProcessing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">taa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sharpFactor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">setting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">postProcessing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">taa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sharpPreBlurFactor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  Engine3D</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">setting</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">render</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">postProcessing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">taa</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">temporalJitterScale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> postProcessing </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> scene3D</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addComponent</span><span style="color:#A6ACCD;">(PostProcessingComponent)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  postProcessing</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addPost</span><span style="color:#A6ACCD;">(TAAPost)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="附录" tabindex="-1">附录 <a class="header-anchor" href="#附录" aria-label="Permalink to &quot;附录&quot;">​</a></h2><p>引用链接和资料查询:</p><ul><li><p><a style="cursor:pointer;" href="https://zhuanlan.zhihu.com/p/137780634"> 卷毛狒狒看的渲染管线 </a></p></li><li><p><a style="cursor:pointer;" href="https://zhuanlan.zhihu.com/p/135308055"> GPU渲染过程 </a></p></li><li><p><a style="cursor:pointer;" href="https://blog.csdn.net/hikaliv/article/details/4258715"> 浅谈cpu执行管道流水线 </a></p></li><li><p><a style="cursor:pointer;" href="https://www.bilibili.com/video/BV1uu411B7uq/?spm_id_from=333.788&amp;vd_source=6e8d0cd78fe3eb2103b38abe81966907"> webgpu零基础入门 </a>（ 注意，这个视频教程和目前webgpu的文档有出入，部分代码已经不适用，请以官方github示例为准。）</p></li><li><p><a style="cursor:pointer;" href="https://github.com/Orillusion/orillusion-webgpu-samples"> orillusion的webgpu示例 </a></p></li><li><p><a style="cursor:pointer;" href="https://www.orillusion.com/guide/"> orillusion的入门教程 </a></p></li></ul>`,69);function A(d,u,h,g,b,m){const p=a("basictriangle"),o=a("webgpudemo");return t(),c("div",null,[y,n(p),D,i,n(o),C])}const w=e(F,[["render",A]]);export{E as __pageData,w as default};
